diff --git a/examples/gate/backend/request/test.lua b/examples/gate/backend/request/test.lua
new file mode 100644
index 0000000..93af17e
--- /dev/null
+++ b/examples/gate/backend/request/test.lua
@@ -0,0 +1,10 @@
+local code = require "code"
+
+local skynet = require "skynet"
+local REQUEST = {}
+
+function REQUEST:test_hello(msg)
+    return {code = code.OK, time = skynet_time(), msg = msg}
+end
+
+return REQUEST
\ No newline at end of file
diff --git a/examples/gate/backend/webapp.lua b/examples/gate/backend/webapp.lua
index 5598d2f..02cede7 100644
--- a/examples/gate/backend/webapp.lua
+++ b/examples/gate/backend/webapp.lua
@@ -3,6 +3,7 @@ local webapp = require "web.app"
 local jproto = require "jproto"
 local proto = require "web.proto"
 local gate = require "gate.backend.request.gate"
+local test = require "gate.backend.request.test"
 local web_util = require "utils.web_util"
 
 local logger = log4.get_logger("backend")
@@ -23,6 +24,14 @@ proto:use("^gate_*", function (req, name, args, res)
     return true
 end)
 
+proto:use("^test_*", function (req, name, args, res)
+    if test[name] then
+        local r = test[name](req, args)
+        table.merge(res, r)
+    end
+    return true
+end)
+
 -- proto:before(".*", web_util.before_log)
 -- proto:after(".*", web_util.after_log)
 
diff --git a/examples/node/service/srv_test_rpc_gate.lua b/examples/node/service/srv_test_rpc_gate.lua
new file mode 100644
index 0000000..ffbf684
--- /dev/null
+++ b/examples/node/service/srv_test_rpc_gate.lua
@@ -0,0 +1,22 @@
+local skynet = require "skynet"
+local etcd_util = require "utils.etcd_util"
+local etcd = require "etcd"
+
+local function test_call_dir_multi( )
+    local dirname = "/mj/gates/"
+    local result_list = etcd_util.call_dir_multi(dirname, "test_hello", { from = "node", to = "gate"})
+    print("call_dir_multi /mj/gates/", result_list)
+end
+
+local function test_call_gate( )
+    local nodename = "/mj/gates/gate1"
+    local rpc = etcd.open(nodename)
+    local ok, ret = rpc:call("test_hello", { from = "node", to = "gate"})
+    print("rpc call /mj/gates/gate1", ok, ret)
+end
+
+skynet.start(function ( ... )
+    test_call_dir_multi()
+    test_call_gate()
+    skynet.exit()
+end)

以上是跨节点远程调用gate代码

启动服务
./bin/start.sh
在终端输入：node/service/srv_test_rpc_gate 
后回车LAUNCH node/service/srv_test_rpc_gate 
